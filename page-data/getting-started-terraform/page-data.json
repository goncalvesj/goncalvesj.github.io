{"componentChunkName":"component---src-templates-post-js","path":"/getting-started-terraform","result":{"data":{"markdownRemark":{"html":"<p>For most of projects that I worked on, when we had the chance of creating infrastructure as code the decision was always to go to ARM templates. Mostly because the skillset of the team was favourable to that technology.</p>\n<p>Out of my own curiosity I decided to try terraform, not just to learn a different tool for <code class=\"language-text\">IaC</code> but also because the <code class=\"language-text\">terraform plan</code> and <code class=\"language-text\">terraform apply</code> functionalities are really useful when you're creating infrastructure.</p>\n<p>Also because of the support that Microsoft is giving this tool, being now documented in their own docs, and the interesting fact that Azure uses the <code class=\"language-text\">Hashcorp Packer</code> tool to build the Azure VMs base images. Makes me think that this relationship is going to last quite a bit and it's definitely worth investing some time on it.</p>\n<h2 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h2>\n<p>Let's start by listing the prerequisites for working with Terraform on Azure:</p>\n<ul>\n<li><a href=\"https://learn.hashicorp.com/terraform/getting-started/install.html\">Terraform CLI</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-windows?view=azure-cli-latest\">Azure CLI</a></li>\n</ul>\n<p>After installing you need to connect to your azure subscription.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Login to Azure</span>\naz login\n<span class=\"token comment\"># Set subcription if you have more than one</span>\naz account <span class=\"token builtin class-name\">set</span> -s SUBSCRIPTIONID</code></pre></div>\n<h2 id=\"creating-resources\" style=\"position:relative;\"><a href=\"#creating-resources\" aria-label=\"creating resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating Resources</h2>\n<p>Now that we are connected to the cloud we can start setting up our infrastructure.</p>\n<p>The steps below will create an Azure Resource Group, an Azure App Service Plan and an App Service that uses a Docker image.</p>\n<ol>\n<li>Create a file <code class=\"language-text\">resources.tf</code></li>\n<li>\n<p>Set a provider</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Sets Azure as our provider</span>\nprovider \"azurerm\" <span class=\"token punctuation\">{</span>\n    version = \"=2.0.0\"\n    features <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Create a resource group</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">resource \"azurerm_resource_group\" \"example\" <span class=\"token punctuation\">{</span>\n    name     = \"RG<span class=\"token punctuation\">-</span>Containers\"\n    location = \"North Europe\"\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Create an App Service Plan on Linux</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">resource \"azurerm_app_service_plan\" \"example\" <span class=\"token punctuation\">{</span>\n    name                = \"RG<span class=\"token punctuation\">-</span>AppPlan<span class=\"token punctuation\">-</span>Linux\"\n    location            = azurerm_resource_group.example.location\n    resource_group_name = azurerm_resource_group.example.name\n    kind                = \"Linux\"\n    reserved            = true\n\n    sku <span class=\"token punctuation\">{</span>\n        tier = \"Basic\"\n        size = \"B1\"\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Create an App Service that uses a Docker image</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">resource \"azurerm_app_service\" \"dockerapp\" <span class=\"token punctuation\">{</span>\n    name                = \"goncalvesj<span class=\"token punctuation\">-</span>ncngb2c\"\n    location            = azurerm_resource_group.example.location\n    resource_group_name = azurerm_resource_group.example.name\n    app_service_plan_id = azurerm_app_service_plan.example.id\n    https_only          = true\n\n    app_settings = <span class=\"token punctuation\">{</span>\n        WEBSITES_ENABLE_APP_SERVICE_STORAGE = false\n    <span class=\"token punctuation\">}</span>\n\n    site_config <span class=\"token punctuation\">{</span>\n        linux_fx_version = \"DOCKER<span class=\"token punctuation\">|</span>goncalvesj/netcore<span class=\"token punctuation\">-</span>angular<span class=\"token punctuation\">-</span>b2c<span class=\"token punctuation\">:</span>dev\"\n        always_on        = \"true\"\n    <span class=\"token punctuation\">}</span>\n\n    identity <span class=\"token punctuation\">{</span>\n        type = \"SystemAssigned\"\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Optional - Create a remote backend</p>\n<p>Terraform has the functionality of having a remote backend to store the state of our infrasctruture. If you're working on a big team and there might be cases of multiple people working at the same time on the infrastrucure side you should use a remote backend to avoid conflicts and concurrent updates.</p>\n<p>The below uses Azure Storage accounts as a remote backend and the storage needs to be created beforehand.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">terraform <span class=\"token punctuation\">{</span>\n    backend \"azurerm\" <span class=\"token punctuation\">{</span>\n        resource_group_name  = \"RG<span class=\"token punctuation\">-</span>Storage\"\n        storage_account_name = \"goncalvesjtfbackends\"\n        container_name       = \"tfstate\"\n        key                  = \"azureappservicedocker.terraform.tfstate\"\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>Run <code class=\"language-text\">terraform plan</code> to create an output of what is going to be added, changed or deleted.</li>\n<li>Then if you're happy with the changes, run <code class=\"language-text\">terraform apply</code> and watch all the resources getting created on Azure.</li>\n</ol>\n<p><strong>Hope this helped!Reach out to me on twitter if you have any questions!</strong></p>","timeToRead":3,"excerpt":"For most of projects that I worked on, when we had the chance of creating infrastructure as code the decision was always to go to ARMâ€¦","frontmatter":{"title":"Getting Started with Terraform","cover":"https://unsplash.it/400/300/?random?BigTest","date":"2020-06-01T00:00:00.000Z","categories":["Tech","Terraform"],"tags":["Terraform","Azure"]},"fields":{"slug":"/getting-started-terraform","date":"May 31, 2020"}}},"pageContext":{"slug":"/getting-started-terraform","nexttitle":"Updating and Patching AKS","nextslug":"/update-patch-aks","prevtitle":"Deploying a Gatsby blog in GitHub pages","prevslug":"/deploy-gatsby-github-pages"}}}